# -*- coding: utf-8 -*-
"""data_conversion

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QfwXWhUU-pi7kN5lXCBA05-Hik92pyLy
"""

import json
import numpy as np
import pandas as pd
import csv
import os
import math

def find_digits(x):
  temp = math.log2(x)
  if temp == math.floor(temp):
    n = temp
  else:
    n = math.floor(temp) + 1
  return int(n)

def Bin(x):
  if x == 0:
    return '0'
  else:
    binary=''
    while x>0:
      x, mod = divmod(x,2)
      binary += str(mod)
    return binary

def preprocessing(dict_data, df):
    """
    categorical_features = ['통관지세관부호', '신고인부호', '수입자부호', '해외거래처부호', '특송업체부호', 
                            '수입통관계획코드', '수입신고구분코드', '수입거래구분코드', '수입종류코드', 
                            '징수형태코드', '운송수단유형코드', '반입보세구역부호', 'HS10단위부호', 
                            '적출국가코드', '원산지국가코드', '관세율구분코드']
    """
    categorical_features = dict_data.keys()
    numeric_features = ['신고중량(KG)', '과세가격원화금액']

    if '신고번호' in df.columns:
      df.drop(['신고일자','신고번호','검사결과코드'],axis=1,inplace=True)
    else:
      df.drop(['신고일자', '검사결과코드'],axis=1,inplace=True)

    df.fillna('Missing', inplace=True)

    for column in numeric_features:
      df[column] = df[column].map(lambda x: np.log10(x+1))

    for column in categorical_features:  
      df[column] = df[column].map(str)    
      dict_col = dict_data[column] # 특성값
      df[column + '_등장횟수'] = 0
      df[column + '_등장비율'] = 0.0

      # 원 핫 인코딩 자리수 확인      
      max_ohe = len(dict_col.keys())
      encoding_digits = find_digits(max_ohe) # 인코딩 변환 후 자리수 계산
      for idx in reversed(range(encoding_digits)): # 인코딩 변환 열 추가
        df[column + '_' + str(idx)] = 0

      # 각 행마다 값의 개수와 비율 저장 row = df[column][idx]
      for row in df[column].index: 
        val_data = df[column][row] # 원소값
        df[column + '_등장횟수'][row] = dict_col[val_data]['count'] # 등장횟수
        df[column + '_등장비율'][row] = dict_col[val_data]['ratio'] # 등장비율

        x = Bin(dict_col[val_data]['onehot']) # 이진 변환
        len_x = len(x) # 이진수의 자리수
        for idx in range(len_x): 
          df[column + '_' + str(idx)][row] = x[idx]

      df.drop([column],axis=1,inplace=True) # key 열 제거

    return df

# df_conversion_train = preprocessing(ret_dictionary,df)